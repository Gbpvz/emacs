;; Object app/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "app/"
  :tables
  (list
    (semanticdb-table "app.h"
      :major-mode 'c-mode
      :tags 
        '( ("__APP_APP_H" variable (:constant-flag t) nil [31 42])
            ("config.h" include (:system-flag t) nil [44 63])
            ("types.h" include (:system-flag t) nil [64 82])
            ("SYS32_IOC_MASK" variable (:constant-flag t) nil [143 157])
            ("SYS32_GET_FREQNOW" variable (:constant-flag t) nil [180 197])
            ("SYS32_GET_VMEGNOW" variable (:constant-flag t) nil [234 251])
            ("SYS32_GET_VANGLENOW" variable (:constant-flag t) nil [288 307])
            ("aux_s" type
               (:members 
                  ( ("sw_version" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [352 372])
                    ("i_middle_a" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [374 393])
                    ("i_middle_b" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [395 414])
                    ("i_middle_c" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [416 435])
                    ("dcp_voltage" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [438 458])
                    ("dcn_voltage" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [460 480])
                    ("dc_v4096" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [483 501])
                    ("dc_v2048" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [503 521]))                  
                :type "struct")
                nil [336 524])
            ("aux" variable
               (:typemodifiers ("extern")
                :type ("aux_s" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [525 549])
            ("sysstm32_s" type
               (:members 
                  ( ("ct_ratio" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [572 589])
                    ("npc_l_uh" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [591 608])
                    ("dcp_c_uf" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [610 627]))                  
                :type "struct")
                nil [551 630])
            ("sysstm32" variable
               (:typemodifiers ("extern")
                :type ("sysstm32_s" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [631 665])
            ("spi_asi_init" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [692 697]))                  
                :type "void")
                nil [667 698])
            ("spi_asi_isr" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [723 728]))                  
                :type "void")
                nil [699 729])
            ("spi_asi_recv" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [755 760]))                  
                :type "void")
                nil [730 761])
            ("spi_sys_init" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [788 793]))                  
                :type "void")
                nil [763 794])
            ("spi_sys_isr" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [819 824]))                  
                :type "void")
                nil [795 825])
            ("fpga_ctrl_init" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [854 859]))                  
                :type "void")
                nil [827 860])
            ("fpga_v_angle_irq_a" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [892 897]))                  
                :type "void")
                nil [861 898])
            ("fpga_v_angle_irq_b" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [930 935]))                  
                :type "void")
                nil [899 936])
            ("fpga_v_angle_irq_c" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [968 973]))                  
                :type "void")
                nil [937 974]))          
      :file "app.h"
      :pointmax 983
      :fsize 982
      :lastmodtime '(22570 51385 898815 14000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SYS32_GET_FREQNOW" . ((semantic-list "(SYS32_IOC_MASK | 0x0001)" 200 . 225)))
          ("SYS32_GET_VMEGNOW" . ((semantic-list "(SYS32_IOC_MASK | 0x0002)" 254 . 279)))
          ("__APP_APP_H")
          ("SYS32_GET_VANGLENOW" . ((semantic-list "(SYS32_IOC_MASK | 0x0003)" 308 . 333)))
          ("SYS32_IOC_MASK" . ((semantic-list "(0x8000)" 163 . 171)))
          )
)
    (semanticdb-table "main.c"
      :major-mode 'c-mode
      :tags 
        '( ("config.h" include (:system-flag t) nil [1 20])
            ("types.h" include (:system-flag t) nil [21 39])
            ("qroutine.h" include (:system-flag t) nil [40 61])
            ("semaphore.h" include (:system-flag t) nil [62 84])
            ("chip/chip.h" include (:system-flag t) nil [85 107])
            ("up/up.h" include (:system-flag t) nil [108 126])
            ("clock.h" include (:system-flag t) nil [127 145])
            ("math.h" include (:system-flag t) nil [146 163])
            ("IQmathLib.h" include (:system-flag t) nil [164 186])
            ("app.h" include nil nil [188 204])
            ("m2sa_fpga.h" include nil nil [206 228])
            ("../smartfusion2/sf2_gpio.h" include nil nil [229 266])
            ("fll_kv_process" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [295 300]))                  
                :type "void")
                nil [268 656])
            ("fll_freq_isstable" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("freq" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [688 702]))                  
                :type "bool")
                nil [658 939])
            ("gpio_init" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [956 961]))                  
                :type "void")
                nil [941 1367])
            ("app_main" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1382 1387]))                  
                :type "int")
                nil [1369 3910]))          
      :file "main.c"
      :pointmax 3912
      :fsize 3911
      :lastmodtime '(22580 64267 530683 401000)
      :unmatched-syntax nil)
    (semanticdb-table "m2sa_fpga.h"
      :major-mode 'c-mode
      :tags 
        '( ("__APP_M2SA_FPGA_H" variable (:constant-flag t) nil [36 53])
            ("CTRL_IRQ_A" variable (:constant-flag t) nil [81 91])
            ("CTRL_IRQ_B" variable (:constant-flag t) nil [103 113])
            ("CTRL_IRQ_C" variable (:constant-flag t) nil [125 135])
            ("V_ANGLE_IRQ_A" variable (:constant-flag t) nil [147 160])
            ("V_ANGLE_IRQ_B" variable (:constant-flag t) nil [172 185])
            ("V_ANGLE_IRQ_C" variable (:constant-flag t) nil [197 210])
            ("CTRL_PROTECT_IRQ" variable (:constant-flag t) nil [222 238])
            ("DETECT_MODE_BASE_ONLY" variable (:constant-flag t) nil [270 291])
            ("DETECT_MODE_WITH_ONE_HARM" variable (:constant-flag t) nil [310 335])
            ("DETECT_MODE_EXCEPT_ONE_HARM_A" variable (:constant-flag t) nil [350 379])
            ("DETECT_MODE_EXCEPT_ONE_HARM_B" variable (:constant-flag t) nil [390 419])
            ("BASE" variable (:constant-flag t) nil [457 461])
            ("SYS_START" variable (:constant-flag t) nil [503 512])
            ("CTRL_MODE" variable (:constant-flag t) nil [546 555])
            ("CTRL_PWM_DEADTIME" variable (:constant-flag t) nil [634 651])
            ("CTRL_AI_NPC_MAX" variable (:constant-flag t) nil [677 692])
            ("SW_CTRL_DOUT_DELAY" variable (:constant-flag t) nil [720 738])
            ("SW_CTRL_PWMA" variable (:constant-flag t) nil [763 775])
            ("SW_CTRL_PWMB" variable (:constant-flag t) nil [806 818])
            ("SW_CTRL_PWMC" variable (:constant-flag t) nil [849 861])
            ("HW_CTRL_CT_RATIO" variable (:constant-flag t) nil [893 909])
            ("HW_CTRL_MIDDLE_IA" variable (:constant-flag t) nil [936 953])
            ("HW_CTRL_MIDDLE_IB" variable (:constant-flag t) nil [979 996])
            ("HW_CTRL_MIDDLE_IC" variable (:constant-flag t) nil [1022 1039])
            ("HW_CTRL_KP" variable (:constant-flag t) nil [1065 1075])
            ("HW_CTRL_KI" variable (:constant-flag t) nil [1108 1118])
            ("HW_CTRL_KV" variable (:constant-flag t) nil [1151 1161])
            ("HW_CTRL_TARGET_DELTA_MAX" variable (:constant-flag t) nil [2012 2036])
            ("VERSION" variable (:constant-flag t) nil [2301 2308])
            ("FREQ0" variable (:constant-flag t) nil [2340 2345])
            ("FREQ1" variable (:constant-flag t) nil [2372 2377])
            ("FREQ2" variable (:constant-flag t) nil [2404 2409])
            ("FREQ3" variable (:constant-flag t) nil [2436 2441])
            ("FREQ4" variable (:constant-flag t) nil [2468 2473])
            ("FREQ5" variable (:constant-flag t) nil [2500 2505])
            ("V_MEG1" variable (:constant-flag t) nil [2533 2539])
            ("V_MEG2" variable (:constant-flag t) nil [2565 2571])
            ("V_MEG3" variable (:constant-flag t) nil [2597 2603])
            ("V_MEG4" variable (:constant-flag t) nil [2629 2635])
            ("V_MEG5" variable (:constant-flag t) nil [2661 2667])
            ("V_ANGLE1" variable (:constant-flag t) nil [2694 2702])
            ("V_ANGLE2" variable (:constant-flag t) nil [2726 2734])
            ("V_ANGLE3" variable (:constant-flag t) nil [2758 2766])
            ("V_ANGLE4" variable (:constant-flag t) nil [2790 2798])
            ("V_ANGLE5" variable (:constant-flag t) nil [2822 2830])
            ("FREQ_NOW" variable (:constant-flag t) nil [2855 2863])
            ("V_MEG_NOW" variable (:constant-flag t) nil [2890 2899])
            ("V_ANGLE_NOW" variable (:constant-flag t) nil [2925 2936])
            ("V_CLARKE" variable (:constant-flag t) nil [2960 2968])
            ("FLL_KV1" variable (:constant-flag t) nil [2996 3003])
            ("FLL_KV2" variable (:constant-flag t) nil [3031 3038])
            ("FLL_KV3" variable (:constant-flag t) nil [3066 3073])
            ("FLL_KV4" variable (:constant-flag t) nil [3101 3108])
            ("FLL_KV5" variable (:constant-flag t) nil [3136 3143])
            ("FPLL_SELECT" variable (:constant-flag t) nil [3172 3183])
            ("REINIT" variable (:constant-flag t) nil [3214 3220])
            ("AI_EXT_START_DELAY" variable (:constant-flag t) nil [3256 3274])
            ("AI_EXT_VA" variable (:constant-flag t) nil [3313 3322])
            ("AI_EXT_VB" variable (:constant-flag t) nil [3349 3358])
            ("AI_EXT_VC" variable (:constant-flag t) nil [3385 3394])
            ("AI_EXT_VN" variable (:constant-flag t) nil [3421 3430])
            ("AI_EXT_IA" variable (:constant-flag t) nil [3458 3467])
            ("AI_EXT_IB" variable (:constant-flag t) nil [3494 3503])
            ("AI_EXT_IC" variable (:constant-flag t) nil [3530 3539])
            ("AI_EXT_IN" variable (:constant-flag t) nil [3566 3575])
            ("AI_EXT_VVREF" variable (:constant-flag t) nil [3603 3615])
            ("AI_EXT_IVREF" variable (:constant-flag t) nil [3639 3651])
            ("AI_EXT_IX_DELTA_MAX" variable (:constant-flag t) nil [3676 3695])
            ("AI_EXT_IN_DELTA_MAX" variable (:constant-flag t) nil [3719 3738])
            ("AI_EXT_VX_DELTA_MAX" variable (:constant-flag t) nil [3762 3781])
            ("AI_EXT_VN_DELTA_MAX" variable (:constant-flag t) nil [3805 3824])
            ("AI_NPC_IA1" variable (:constant-flag t) nil [3868 3878])
            ("AI_NPC_IB1" variable (:constant-flag t) nil [3904 3914])
            ("AI_NPC_IC1" variable (:constant-flag t) nil [3940 3950])
            ("AI_NPC_IA2" variable (:constant-flag t) nil [3977 3987])
            ("AI_NPC_IB2" variable (:constant-flag t) nil [4013 4023])
            ("AI_NPC_IC2" variable (:constant-flag t) nil [4049 4059])
            ("AI_NPC_VREF" variable (:constant-flag t) nil [4086 4097])
            ("DETECT_CTRL" variable (:constant-flag t) nil [4137 4148])
            ("DETECT_A_HARM_FX" variable (:constant-flag t) nil [4183 4199])
            ("DETECT_A_FIX_IP_MEG" variable (:constant-flag t) nil [4228 4247])
            ("DETECT_A_IP_ADJUST" variable (:constant-flag t) nil [4273 4291])
            ("DETECT_A_FIX_IQ_MEG" variable (:constant-flag t) nil [4318 4337])
            ("DETECT_A_IQ_FACTOR" variable (:constant-flag t) nil [4363 4381])
            ("DETECT_A_DC_ADJUST" variable (:constant-flag t) nil [4408 4426])
            ("DETECT_A_ANGLE_ADJUST" variable (:constant-flag t) nil [4453 4474])
            ("DETECT_B_HARM_FX" variable (:constant-flag t) nil [4499 4515])
            ("DETECT_B_FIX_IP_MEG" variable (:constant-flag t) nil [4544 4563])
            ("DETECT_B_IP_ADJUST" variable (:constant-flag t) nil [4589 4607])
            ("DETECT_B_FIX_IQ_MEG" variable (:constant-flag t) nil [4634 4653])
            ("DETECT_B_IQ_FACTOR" variable (:constant-flag t) nil [4679 4697])
            ("DETECT_B_DC_ADJUST" variable (:constant-flag t) nil [4724 4742])
            ("DETECT_B_ANGLE_ADJUST" variable (:constant-flag t) nil [4769 4790])
            ("DETECT_C_HARM_FX" variable (:constant-flag t) nil [4815 4831])
            ("DETECT_C_FIX_IP_MEG" variable (:constant-flag t) nil [4860 4879])
            ("DETECT_C_IP_ADJUST" variable (:constant-flag t) nil [4905 4923])
            ("DETECT_C_FIX_IQ_MEG" variable (:constant-flag t) nil [4950 4969])
            ("DETECT_C_IQ_FACTOR" variable (:constant-flag t) nil [4995 5013])
            ("DETECT_C_DC_ADJUST" variable (:constant-flag t) nil [5040 5058])
            ("DETECT_C_ANGLE_ADJUST" variable (:constant-flag t) nil [5085 5106])
            ("DETECT_I_D" variable (:constant-flag t) nil [5131 5141])
            ("DETECT_I_Q" variable (:constant-flag t) nil [5171 5181])
            ("DETECT_IA_APF" variable (:constant-flag t) nil [5212 5225])
            ("DETECT_IA_CALC" variable (:constant-flag t) nil [5252 5266])
            ("DETECT_IA_DC" variable (:constant-flag t) nil [5292 5304])
            ("DETECT_IA_BASE" variable (:constant-flag t) nil [5332 5346])
            ("DETECT_IA_HARM" variable (:constant-flag t) nil [5372 5386])
            ("DETECT_IA_BASE_P" variable (:constant-flag t) nil [5412 5428])
            ("DETECT_IA_BASE_Q" variable (:constant-flag t) nil [5452 5468])
            ("DETECT_IB_APF" variable (:constant-flag t) nil [5493 5506])
            ("DETECT_IB_CALC" variable (:constant-flag t) nil [5533 5547])
            ("DETECT_IB_DC" variable (:constant-flag t) nil [5573 5585])
            ("DETECT_IB_BASE" variable (:constant-flag t) nil [5613 5627])
            ("DETECT_IB_HARM" variable (:constant-flag t) nil [5653 5667])
            ("DETECT_IB_BASE_P" variable (:constant-flag t) nil [5693 5709])
            ("DETECT_IB_BASE_Q" variable (:constant-flag t) nil [5733 5749])
            ("DETECT_IC_APF" variable (:constant-flag t) nil [5774 5787])
            ("DETECT_IC_CALC" variable (:constant-flag t) nil [5814 5828])
            ("DETECT_IC_DC" variable (:constant-flag t) nil [5854 5866])
            ("DETECT_IC_BASE" variable (:constant-flag t) nil [5894 5908])
            ("DETECT_IC_HARM" variable (:constant-flag t) nil [5934 5948])
            ("DETECT_IC_BASE_P" variable (:constant-flag t) nil [5974 5990])
            ("DETECT_IC_BASE_Q" variable (:constant-flag t) nil [6014 6030])
            ("DETECT_A_FIX_HARM_P" variable (:constant-flag t) nil [6055 6074])
            ("DETECT_IA_HARM_P" variable (:constant-flag t) nil [6101 6117])
            ("DETECT_A_FIX_HARM_Q" variable (:constant-flag t) nil [6147 6166])
            ("DETECT_IA_HARM_Q" variable (:constant-flag t) nil [6193 6209])
            ("DETECT_B_FIX_HARM_P" variable (:constant-flag t) nil [6239 6258])
            ("DETECT_IB_HARM_P" variable (:constant-flag t) nil [6285 6301])
            ("DETECT_B_FIX_HARM_Q" variable (:constant-flag t) nil [6331 6350])
            ("DETECT_IB_HARM_Q" variable (:constant-flag t) nil [6377 6393])
            ("DETECT_C_FIX_HARM_P" variable (:constant-flag t) nil [6423 6442])
            ("DETECT_IC_HARM_P" variable (:constant-flag t) nil [6469 6485])
            ("DETECT_C_FIX_HARM_Q" variable (:constant-flag t) nil [6515 6534])
            ("DETECT_IC_HARM_Q" variable (:constant-flag t) nil [6561 6577])
            ("DOUT_CTRL_DELTA_PWM_MODE" variable (:constant-flag t) nil [6620 6644])
            ("DOUT_CTRL_DELTA_PWMA" variable (:constant-flag t) nil [6671 6691])
            ("DOUT_CTRL_DELTA_PWMB" variable (:constant-flag t) nil [6722 6742])
            ("DOUT_CTRL_DELTA_PWMC" variable (:constant-flag t) nil [6773 6793])
            ("DOUT_CTRL_DELTA_PWM_P_MODE" variable (:constant-flag t) nil [6825 6851])
            ("DOUT_CTRL_DELTA_PWMA_P" variable (:constant-flag t) nil [6876 6898])
            ("DOUT_CTRL_DELTA_PWMB_P" variable (:constant-flag t) nil [6926 6948])
            ("DOUT_CTRL_DELTA_PWMC_P" variable (:constant-flag t) nil [6976 6998])
            ("DOUT_CTRL_DELTA_PWM_I_MODE" variable (:constant-flag t) nil [7027 7053])
            ("DOUT_CTRL_DELTA_PWMA_I" variable (:constant-flag t) nil [7078 7100])
            ("DOUT_CTRL_DELTA_PWMB_I" variable (:constant-flag t) nil [7128 7150])
            ("DOUT_CTRL_DELTA_PWMC_I" variable (:constant-flag t) nil [7178 7200])
            ("DOUT_CTRL_DELTA_I_MODE" variable (:constant-flag t) nil [7229 7251])
            ("DOUT_CTRL_DELTA_IA" variable (:constant-flag t) nil [7280 7298])
            ("DOUT_CTRL_DELTA_IB" variable (:constant-flag t) nil [7330 7348])
            ("DOUT_CTRL_DELTA_IC" variable (:constant-flag t) nil [7380 7398])
            ("DOUT_CTRL_DELTA_PWM_V_MODE" variable (:constant-flag t) nil [7431 7457])
            ("DOUT_CTRL_DELTA_PWMA_V" variable (:constant-flag t) nil [7482 7504])
            ("DOUT_CTRL_DELTA_PWMB_V" variable (:constant-flag t) nil [7532 7554])
            ("DOUT_CTRL_DELTA_PWMC_V" variable (:constant-flag t) nil [7582 7604])
            ("PWM_CTRL_DUTY_SHIFT" variable (:constant-flag t) nil [7660 7679])
            ("PWM_CTRL_DUTY_MASK" variable (:constant-flag t) nil [7692 7710])
            ("PWM_CTRL_DEADTIME_SHIFT" variable (:constant-flag t) nil [7728 7751])
            ("PWM_CTRL_DEADTIME_MASK" variable (:constant-flag t) nil [7765 7787])
            ("PWM_CTRL_LESSCH" variable (:constant-flag t) nil [7831 7846])
            ("PWM_CTRL_EN" variable (:constant-flag t) nil [7866 7877])
            ("DETECT_CTRL_BALANCE_EN" variable (:constant-flag t) nil [7924 7946])
            ("DETECT_CTRL_A_MODE_SHIFT" variable (:constant-flag t) nil [7971 7995])
            ("DETECT_CTRL_A_MODE_MASK" variable (:constant-flag t) nil [8012 8035])
            ("DETECT_CTRL_A_FIX_PFACTOR_EN" variable (:constant-flag t) nil [8083 8111])
            ("DETECT_CTRL_A_FIX_IP_EN" variable (:constant-flag t) nil [8130 8153])
            ("DETECT_CTRL_A_FIX_IQ_EN" variable (:constant-flag t) nil [8177 8200])
            ("DETECT_CTRL_A_FIX_HARM_EN" variable (:constant-flag t) nil [8224 8249])
            ("DETECT_CTRL_B_MODE_SHIFT" variable (:constant-flag t) nil [8272 8296])
            ("DETECT_CTRL_B_MODE_MASK" variable (:constant-flag t) nil [8314 8337])
            ("DETECT_CTRL_B_FIX_PFACTOR_EN" variable (:constant-flag t) nil [8385 8413])
            ("DETECT_CTRL_B_FIX_IP_EN" variable (:constant-flag t) nil [8432 8455])
            ("DETECT_CTRL_B_FIX_IQ_EN" variable (:constant-flag t) nil [8479 8502])
            ("DETECT_CTRL_B_FIX_HARM_EN" variable (:constant-flag t) nil [8526 8551])
            ("DETECT_CTRL_C_MODE_SHIFT" variable (:constant-flag t) nil [8574 8598])
            ("DETECT_CTRL_C_MODE_MASK" variable (:constant-flag t) nil [8616 8639])
            ("DETECT_CTRL_C_FIX_PFACTOR_EN" variable (:constant-flag t) nil [8687 8715])
            ("DETECT_CTRL_C_FIX_IP_EN" variable (:constant-flag t) nil [8734 8757])
            ("DETECT_CTRL_C_FIX_IQ_EN" variable (:constant-flag t) nil [8781 8804])
            ("DETECT_CTRL_C_FIX_HARM_EN" variable (:constant-flag t) nil [8828 8853]))          
      :file "m2sa_fpga.h"
      :pointmax 8900
      :fsize 8899
      :lastmodtime '(22570 51385 898815 14000)
      :unmatched-syntax nil
      :lexical-table 
        '(("CTRL_IRQ_A" . ((number "50" 92 . 94)))
          ("HW_CTRL_KP" . ((semantic-list "(BASE + 0x030)" 1085 . 1099)))
          ("FREQ5" . ((semantic-list "(BASE + 0x114)" 2509 . 2523)))
          ("V_ANGLE2" . ((semantic-list "(BASE + 0x148)" 2735 . 2749)))
          ("AI_EXT_VVREF" . ((semantic-list "(BASE + 0x220)" 3616 . 3630)))
          ("AI_EXT_IVREF" . ((semantic-list "(BASE + 0x224)" 3652 . 3666)))
          ("AI_EXT_IX_DELTA_MAX" . ((semantic-list "(BASE + 0x230)" 3696 . 3710)))
          ("AI_EXT_VX_DELTA_MAX" . ((semantic-list "(BASE + 0x238)" 3782 . 3796)))
          ("AI_NPC_IA2" . ((semantic-list "(BASE + 0x410)" 3990 . 4004)))
          ("DETECT_IA_BASE_Q" . ((semantic-list "(BASE + 0x898)" 5469 . 5483)))
          ("DETECT_B_FIX_HARM_Q" . ((semantic-list "(BASE + 0x8ec)" 6354 . 6368)))
          ("DETECT_IC_HARM_P" . ((semantic-list "(BASE + 0x8f0)" 6492 . 6506)))
          ("DOUT_CTRL_DELTA_PWM_MODE" . ((semantic-list "(BASE + 0x1020)" 6647 . 6662)))
          ("DOUT_CTRL_DELTA_PWM_P_MODE" . ((semantic-list "(BASE + 0x1030)" 6852 . 6867)))
          ("DOUT_CTRL_DELTA_PWMC_I" . ((semantic-list "(BASE + 0x104c)" 7204 . 7219)))
          ("DOUT_CTRL_DELTA_PWMC_V" . ((semantic-list "(BASE + 0x106c)" 7608 . 7623)))
          ("CTRL_IRQ_B" . ((number "51" 114 . 116)))
          ("DETECT_MODE_BASE_ONLY" . ((number "0" 300 . 301)))
          ("SW_CTRL_DOUT_DELAY" . ((semantic-list "(BASE + 0x010)" 740 . 754)))
          ("V_ANGLE3" . ((semantic-list "(BASE + 0x14c)" 2767 . 2781)))
          ("DETECT_C_FIX_IP_MEG" . ((semantic-list "(BASE + 0x854)" 4882 . 4896)))
          ("DETECT_C_IP_ADJUST" . ((semantic-list "(BASE + 0x858)" 4927 . 4941)))
          ("DETECT_IB_BASE" . ((semantic-list "(BASE + 0x8ac)" 5630 . 5644)))
          ("DETECT_IC_CALC" . ((semantic-list "(BASE + 0x8c4)" 5831 . 5845)))
          ("DETECT_IC_HARM_Q" . ((semantic-list "(BASE + 0x8f4)" 6584 . 6598)))
          ("DOUT_CTRL_DELTA_PWMA" . ((semantic-list "(BASE + 0x1024)" 6698 . 6713)))
          ("DOUT_CTRL_DELTA_IA" . ((semantic-list "(BASE + 0x1054)" 7306 . 7321)))
          ("PWM_CTRL_LESSCH" . ((semantic-list "(1 << 19)" 7848 . 7857)))
          ("DETECT_CTRL_B_FIX_IP_EN" . ((semantic-list "(1 << 19)" 8461 . 8470)))
          ("DETECT_CTRL_C_MODE_MASK" . ((semantic-list "(0x3 << DETECT_CTRL_C_MODE_SHIFT)" 8645 . 8678)))
          ("CTRL_IRQ_C" . ((number "52" 136 . 138)))
          ("CTRL_PROTECT_IRQ" . ((number "56" 239 . 241)))
          ("SYS_START" . ((semantic-list "(BASE + 0x000)" 523 . 537)))
          ("V_ANGLE4" . ((semantic-list "(BASE + 0x150)" 2799 . 2813)))
          ("FREQ_NOW" . ((semantic-list "(BASE + 0x160)" 2867 . 2881)))
          ("AI_NPC_IB1" . ((semantic-list "(BASE + 0x404)" 3917 . 3931)))
          ("DETECT_A_HARM_FX" . ((semantic-list "(BASE + 0x810)" 4205 . 4219)))
          ("DETECT_A_DC_ADJUST" . ((semantic-list "(BASE + 0x824)" 4430 . 4444)))
          ("DETECT_A_ANGLE_ADJUST" . ((semantic-list "(BASE + 0x828)" 4475 . 4489)))
          ("DETECT_IB_BASE_P" . ((semantic-list "(BASE + 0x8b4)" 5710 . 5724)))
          ("DOUT_CTRL_DELTA_PWMB" . ((semantic-list "(BASE + 0x1028)" 6749 . 6764)))
          ("DOUT_CTRL_DELTA_PWMA_P" . ((semantic-list "(BASE + 0x1034)" 6902 . 6917)))
          ("DOUT_CTRL_DELTA_PWM_I_MODE" . ((semantic-list "(BASE + 0x1040)" 7054 . 7069)))
          ("DOUT_CTRL_DELTA_IB" . ((semantic-list "(BASE + 0x1058)" 7356 . 7371)))
          ("DOUT_CTRL_DELTA_PWM_V_MODE" . ((semantic-list "(BASE + 0x1060)" 7458 . 7473)))
          ("PWM_CTRL_DUTY_MASK" . ((semantic-list "(0xfff)" 7711 . 7718)))
          ("PWM_CTRL_EN" . ((semantic-list "(1 << 20)" 7880 . 7889)))
          ("DETECT_CTRL_B_FIX_IQ_EN" . ((semantic-list "(1 << 20)" 8508 . 8517)))
          ("CTRL_MODE" . ((semantic-list "(BASE + 0x004)" 566 . 580)))
          ("V_ANGLE5" . ((semantic-list "(BASE + 0x154)" 2831 . 2845)))
          ("AI_NPC_IB2" . ((semantic-list "(BASE + 0x414)" 4026 . 4040)))
          ("DETECT_IA_HARM" . ((semantic-list "(BASE + 0x890)" 5389 . 5403)))
          ("DETECT_IB_BASE_Q" . ((semantic-list "(BASE + 0x8b8)" 5750 . 5764)))
          ("DETECT_A_FIX_HARM_P" . ((semantic-list "(BASE + 0x8e0)" 6078 . 6092)))
          ("DOUT_CTRL_DELTA_PWMC" . ((semantic-list "(BASE + 0x102c)" 6800 . 6815)))
          ("DOUT_CTRL_DELTA_IC" . ((semantic-list "(BASE + 0x105c)" 7406 . 7421)))
          ("DETECT_CTRL_BALANCE_EN" . ((semantic-list "(1 << 0)" 7953 . 7961)))
          ("__APP_M2SA_FPGA_H")
          ("V_ANGLE_IRQ_A" . ((number "53" 161 . 163)))
          ("DETECT_MODE_WITH_ONE_HARM" . ((number "1" 340 . 341)))
          ("CTRL_AI_NPC_MAX" . ((semantic-list "(BASE + 0x00c)" 697 . 711)))
          ("V_MEG1" . ((semantic-list "(BASE + 0x124)" 2542 . 2556)))
          ("AI_EXT_VA" . ((semantic-list "(BASE + 0x200)" 3326 . 3340)))
          ("AI_EXT_VN" . ((semantic-list "(BASE + 0x20c)" 3434 . 3448)))
          ("AI_EXT_IA" . ((semantic-list "(BASE + 0x210)" 3471 . 3485)))
          ("AI_EXT_IN" . ((semantic-list "(BASE + 0x21c)" 3579 . 3593)))
          ("DETECT_A_IQ_FACTOR" . ((semantic-list "(BASE + 0x820)" 4385 . 4399)))
          ("DETECT_C_FIX_IQ_MEG" . ((semantic-list "(BASE + 0x85c)" 4972 . 4986)))
          ("DETECT_A_FIX_HARM_Q" . ((semantic-list "(BASE + 0x8e4)" 6170 . 6184)))
          ("DOUT_CTRL_DELTA_PWMB_I" . ((semantic-list "(BASE + 0x1048)" 7154 . 7169)))
          ("DOUT_CTRL_DELTA_PWMB_V" . ((semantic-list "(BASE + 0x1068)" 7558 . 7573)))
          ("PWM_CTRL_DUTY_SHIFT" . ((semantic-list "(0)" 7680 . 7683)))
          ("DETECT_CTRL_C_MODE_SHIFT" . ((semantic-list "(24)" 8603 . 8607)))
          ("DETECT_CTRL_C_FIX_IP_EN" . ((semantic-list "(1 << 27)" 8763 . 8772)))
          ("V_ANGLE_IRQ_B" . ((number "54" 186 . 188)))
          ("CTRL_PWM_DEADTIME" . ((semantic-list "(BASE + 0x008)" 654 . 668)))
          ("V_MEG2" . ((semantic-list "(BASE + 0x128)" 2574 . 2588)))
          ("V_ANGLE_NOW" . ((semantic-list "(BASE + 0x168)" 2937 . 2951)))
          ("FLL_KV1" . ((semantic-list "(BASE + 0x174)" 3008 . 3022)))
          ("AI_EXT_VB" . ((semantic-list "(BASE + 0x204)" 3362 . 3376)))
          ("AI_EXT_IB" . ((semantic-list "(BASE + 0x214)" 3507 . 3521)))
          ("AI_NPC_IC1" . ((semantic-list "(BASE + 0x408)" 3953 . 3967)))
          ("DETECT_CTRL" . ((semantic-list "(BASE + 0x800)" 4159 . 4173)))
          ("DETECT_B_FIX_IP_MEG" . ((semantic-list "(BASE + 0x834)" 4566 . 4580)))
          ("DETECT_B_DC_ADJUST" . ((semantic-list "(BASE + 0x844)" 4746 . 4760)))
          ("DETECT_B_ANGLE_ADJUST" . ((semantic-list "(BASE + 0x848)" 4791 . 4805)))
          ("DETECT_IA_DC" . ((semantic-list "(BASE + 0x888)" 5309 . 5323)))
          ("DETECT_IA_BASE" . ((semantic-list "(BASE + 0x88c)" 5349 . 5363)))
          ("DETECT_IB_CALC" . ((semantic-list "(BASE + 0x8a4)" 5550 . 5564)))
          ("DETECT_IC_BASE_P" . ((semantic-list "(BASE + 0x8d4)" 5991 . 6005)))
          ("DETECT_CTRL_A_FIX_PFACTOR_EN" . ((semantic-list "(1 << 10)" 8112 . 8121)))
          ("DETECT_CTRL_A_FIX_HARM_EN" . ((semantic-list "(1 << 13)" 8253 . 8262)))
          ("DETECT_CTRL_C_FIX_IQ_EN" . ((semantic-list "(1 << 28)" 8810 . 8819)))
          ("V_ANGLE_IRQ_C" . ((number "55" 211 . 213)))
          ("HW_CTRL_KI" . ((semantic-list "(BASE + 0x034)" 1128 . 1142)))
          ("HW_CTRL_KV" . ((semantic-list "(BASE + 0x03c)" 1171 . 1185)))
          ("VERSION" . ((semantic-list "(BASE + 0x0f0)" 2316 . 2330)))
          ("V_MEG3" . ((semantic-list "(BASE + 0x12c)" 2606 . 2620)))
          ("V_CLARKE" . ((semantic-list "(BASE + 0x16c)" 2972 . 2986)))
          ("FLL_KV2" . ((semantic-list "(BASE + 0x178)" 3043 . 3057)))
          ("AI_EXT_VC" . ((semantic-list "(BASE + 0x208)" 3398 . 3412)))
          ("AI_EXT_IC" . ((semantic-list "(BASE + 0x218)" 3543 . 3557)))
          ("AI_NPC_IC2" . ((semantic-list "(BASE + 0x418)" 4062 . 4076)))
          ("DETECT_I_D" . ((semantic-list "(BASE + 0x870)" 5148 . 5162)))
          ("DETECT_I_Q" . ((semantic-list "(BASE + 0x874)" 5188 . 5202)))
          ("DETECT_IA_APF" . ((semantic-list "(BASE + 0x880)" 5229 . 5243)))
          ("DETECT_IB_DC" . ((semantic-list "(BASE + 0x8a8)" 5590 . 5604)))
          ("DETECT_IC_BASE_Q" . ((semantic-list "(BASE + 0x8d8)" 6031 . 6045)))
          ("DETECT_CTRL_B_FIX_PFACTOR_EN" . ((semantic-list "(1 << 18)" 8414 . 8423)))
          ("DETECT_CTRL_B_FIX_HARM_EN" . ((semantic-list "(1 << 21)" 8555 . 8564)))
          ("BASE" . ((number "0x30000000" 462 . 472)))
          ("HW_CTRL_TARGET_DELTA_MAX" . ((semantic-list "(BASE + 0x074)" 2037 . 2051)))
          ("V_MEG4" . ((semantic-list "(BASE + 0x130)" 2638 . 2652)))
          ("FLL_KV3" . ((semantic-list "(BASE + 0x17c)" 3078 . 3092)))
          ("AI_EXT_START_DELAY" . ((semantic-list "(BASE + 0x1b0)" 3275 . 3289)))
          ("AI_NPC_VREF" . ((semantic-list "(BASE + 0x420)" 4099 . 4113)))
          ("DETECT_B_IQ_FACTOR" . ((semantic-list "(BASE + 0x840)" 4701 . 4715)))
          ("DETECT_C_HARM_FX" . ((semantic-list "(BASE + 0x850)" 4837 . 4851)))
          ("DETECT_IC_DC" . ((semantic-list "(BASE + 0x8c8)" 5871 . 5885)))
          ("DETECT_IA_HARM_P" . ((semantic-list "(BASE + 0x8e0)" 6124 . 6138)))
          ("DOUT_CTRL_DELTA_PWMC_P" . ((semantic-list "(BASE + 0x103c)" 7002 . 7017)))
          ("DETECT_CTRL_C_FIX_PFACTOR_EN" . ((semantic-list "(1 << 26)" 8716 . 8725)))
          ("DETECT_CTRL_C_FIX_HARM_EN" . ((semantic-list "(1 << 29)" 8857 . 8866)))
          ("SW_CTRL_PWMA" . ((semantic-list "(BASE + 0x014)" 783 . 797)))
          ("HW_CTRL_CT_RATIO" . ((semantic-list "(BASE + 0x020)" 913 . 927)))
          ("FREQ0" . ((semantic-list "(BASE + 0x100)" 2349 . 2363)))
          ("V_MEG5" . ((semantic-list "(BASE + 0x134)" 2670 . 2684)))
          ("FLL_KV4" . ((semantic-list "(BASE + 0x180)" 3113 . 3127)))
          ("REINIT" . ((semantic-list "(BASE + 0x1a4)" 3233 . 3247)))
          ("DETECT_A_IP_ADJUST" . ((semantic-list "(BASE + 0x818)" 4295 . 4309)))
          ("DETECT_B_FIX_IQ_MEG" . ((semantic-list "(BASE + 0x83c)" 4656 . 4670)))
          ("DETECT_C_DC_ADJUST" . ((semantic-list "(BASE + 0x864)" 5062 . 5076)))
          ("DETECT_C_ANGLE_ADJUST" . ((semantic-list "(BASE + 0x868)" 5107 . 5121)))
          ("DETECT_IC_HARM" . ((semantic-list "(BASE + 0x8d0)" 5951 . 5965)))
          ("DETECT_IA_HARM_Q" . ((semantic-list "(BASE + 0x8e4)" 6216 . 6230)))
          ("DETECT_C_FIX_HARM_P" . ((semantic-list "(BASE + 0x8f0)" 6446 . 6460)))
          ("DOUT_CTRL_DELTA_PWMA_I" . ((semantic-list "(BASE + 0x1044)" 7104 . 7119)))
          ("DOUT_CTRL_DELTA_PWMA_V" . ((semantic-list "(BASE + 0x1064)" 7508 . 7523)))
          ("DETECT_CTRL_A_MODE_MASK" . ((semantic-list "(0x3 << DETECT_CTRL_A_MODE_SHIFT)" 8041 . 8074)))
          ("DETECT_CTRL_B_MODE_SHIFT" . ((semantic-list "(16)" 8301 . 8305)))
          ("SW_CTRL_PWMB" . ((semantic-list "(BASE + 0x018)" 826 . 840)))
          ("HW_CTRL_MIDDLE_IA" . ((semantic-list "(BASE + 0x024)" 956 . 970)))
          ("FREQ1" . ((semantic-list "(BASE + 0x104)" 2381 . 2395)))
          ("FLL_KV5" . ((semantic-list "(BASE + 0x184)" 3148 . 3162)))
          ("FPLL_SELECT" . ((semantic-list "(BASE + 0x1a0)" 3191 . 3205)))
          ("AI_EXT_IN_DELTA_MAX" . ((semantic-list "(BASE + 0x234)" 3739 . 3753)))
          ("AI_EXT_VN_DELTA_MAX" . ((semantic-list "(BASE + 0x23c)" 3825 . 3839)))
          ("DETECT_A_FIX_IP_MEG" . ((semantic-list "(BASE + 0x814)" 4250 . 4264)))
          ("DETECT_IA_CALC" . ((semantic-list "(BASE + 0x884)" 5269 . 5283)))
          ("DETECT_IB_APF" . ((semantic-list "(BASE + 0x8a0)" 5510 . 5524)))
          ("DETECT_C_FIX_HARM_Q" . ((semantic-list "(BASE + 0x8f4)" 6538 . 6552)))
          ("DETECT_MODE_EXCEPT_ONE_HARM_A" . ((number "2" 380 . 381)))
          ("SW_CTRL_PWMC" . ((semantic-list "(BASE + 0x01c)" 869 . 883)))
          ("HW_CTRL_MIDDLE_IB" . ((semantic-list "(BASE + 0x028)" 999 . 1013)))
          ("FREQ2" . ((semantic-list "(BASE + 0x108)" 2413 . 2427)))
          ("V_MEG_NOW" . ((semantic-list "(BASE + 0x164)" 2902 . 2916)))
          ("DETECT_C_IQ_FACTOR" . ((semantic-list "(BASE + 0x860)" 5017 . 5031)))
          ("DETECT_IC_BASE" . ((semantic-list "(BASE + 0x8cc)" 5911 . 5925)))
          ("DETECT_IB_HARM_P" . ((semantic-list "(BASE + 0x8e8)" 6308 . 6322)))
          ("DOUT_CTRL_DELTA_I_MODE" . ((semantic-list "(BASE + 0x1050)" 7256 . 7271)))
          ("PWM_CTRL_DEADTIME_SHIFT" . ((semantic-list "(16)" 7752 . 7756)))
          ("DETECT_MODE_EXCEPT_ONE_HARM_B" . ((number "3" 420 . 421)))
          ("HW_CTRL_MIDDLE_IC" . ((semantic-list "(BASE + 0x02c)" 1042 . 1056)))
          ("FREQ3" . ((semantic-list "(BASE + 0x10c)" 2445 . 2459)))
          ("DETECT_B_HARM_FX" . ((semantic-list "(BASE + 0x830)" 4521 . 4535)))
          ("DETECT_B_IP_ADJUST" . ((semantic-list "(BASE + 0x838)" 4611 . 4625)))
          ("DETECT_IB_HARM_Q" . ((semantic-list "(BASE + 0x8ec)" 6400 . 6414)))
          ("DOUT_CTRL_DELTA_PWMB_P" . ((semantic-list "(BASE + 0x1038)" 6952 . 6967)))
          ("PWM_CTRL_DEADTIME_MASK" . ((semantic-list "(0x7 << PWMA_CTRL_DEADTIME_SHIFT)" 7788 . 7821)))
          ("DETECT_CTRL_A_FIX_IP_EN" . ((semantic-list "(1 << 11)" 8159 . 8168)))
          ("DETECT_CTRL_B_MODE_MASK" . ((semantic-list "(0x3 << DETECT_CTRL_B_MODE_SHIFT)" 8343 . 8376)))
          ("FREQ4" . ((semantic-list "(BASE + 0x110)" 2477 . 2491)))
          ("V_ANGLE1" . ((semantic-list "(BASE + 0x144)" 2703 . 2717)))
          ("AI_NPC_IA1" . ((semantic-list "(BASE + 0x400)" 3881 . 3895)))
          ("DETECT_A_FIX_IQ_MEG" . ((semantic-list "(BASE + 0x81c)" 4340 . 4354)))
          ("DETECT_IA_BASE_P" . ((semantic-list "(BASE + 0x894)" 5429 . 5443)))
          ("DETECT_IB_HARM" . ((semantic-list "(BASE + 0x8b0)" 5670 . 5684)))
          ("DETECT_IC_APF" . ((semantic-list "(BASE + 0x8c0)" 5791 . 5805)))
          ("DETECT_B_FIX_HARM_P" . ((semantic-list "(BASE + 0x8e8)" 6262 . 6276)))
          ("DETECT_CTRL_A_MODE_SHIFT" . ((semantic-list "(8)" 8000 . 8003)))
          ("DETECT_CTRL_A_FIX_IQ_EN" . ((semantic-list "(1 << 12)" 8206 . 8215)))
          )
)
    (semanticdb-table "m2sa_fpga.c"
      :major-mode 'c-mode
      :tags 
        '( ("config.h" include (:system-flag t) nil [1 20])
            ("types.h" include (:system-flag t) nil [21 39])
            ("qroutine.h" include (:system-flag t) nil [40 61])
            ("semaphore.h" include (:system-flag t) nil [62 84])
            ("chip/chip.h" include (:system-flag t) nil [85 107])
            ("up/up.h" include (:system-flag t) nil [108 126])
            ("clock.h" include (:system-flag t) nil [127 145])
            ("math.h" include (:system-flag t) nil [146 163])
            ("m2sa_fpga.h" include nil nil [165 187])
            ("app.h" include nil nil [188 204])
            ("ip_adjust" variable
               (:typemodifiers ("static")
                :type ("int32_t" type (:type "class") nil nil))
                nil [206 231])
            ("d_vdc_pre" variable
               (:typemodifiers ("static")
                :type ("int32_t" type (:type "class") nil nil))
                nil [232 257])
            ("ip_adjust_ctrl" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [289 294]))                  
                :type ("int32_t" type (:type "class") nil nil))
                nil [259 1185])
            ("d_dc_pre" variable
               (:typemodifiers ("static")
                :type ("int32_t" type (:type "class") nil nil))
                nil [1187 1211])
            ("dc_adjust" variable
               (:typemodifiers ("static")
                :type ("int32_t" type (:type "class") nil nil))
                nil [1212 1237])
            ("dc_adjust_ctrl" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1269 1274]))                  
                :type ("int32_t" type (:type "class") nil nil))
                nil [1239 1636])
            ("kp" variable
               (:typemodifiers ("static")
                :type ("int32_t" type (:type "class") nil nil))
                nil [1638 1656])
            ("ki" variable
               (:typemodifiers ("static")
                :type ("int32_t" type (:type "class") nil nil))
                nil [1657 1675])
            ("kv" variable
               (:typemodifiers ("static")
                :type ("int32_t" type (:type "class") nil nil))
                nil [1676 1694])
            ("pid_param_set" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1722 1727]))                  
                :type "void")
                nil [1696 2075])
            ("fpga_ctrl_init" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2097 2102]))                  
                :type "void")
                nil [2077 2306])
            ("start_sync" variable
               (:typemodifiers ("static")
                :type ("uint32_t" type (:type "class") nil nil))
                nil [2307 2334])
            ("fpga_v_angle_irq_a" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2360 2365]))                  
                :type "void")
                nil [2336 2669])
            ("fpga_v_angle_irq_b" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2695 2700]))                  
                :type "void")
                nil [2671 2933])
            ("fpga_v_angle_irq_c" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2959 2964]))                  
                :type "void")
                nil [2935 3190]))          
      :file "m2sa_fpga.c"
      :pointmax 3192
      :fsize 3225
      :lastmodtime '(22580 361 753376 197000)
      :unmatched-syntax nil)
    (semanticdb-table "spi_sys.c"
      :major-mode 'c-mode
      :tags 
        '( ("config.h" include (:system-flag t) nil [1 20])
            ("types.h" include (:system-flag t) nil [21 39])
            ("qroutine.h" include (:system-flag t) nil [40 61])
            ("semaphore.h" include (:system-flag t) nil [62 84])
            ("chip/chip.h" include (:system-flag t) nil [85 107])
            ("up/up.h" include (:system-flag t) nil [108 126])
            ("clock.h" include (:system-flag t) nil [127 145])
            ("math.h" include (:system-flag t) nil [146 163])
            ("app.h" include nil nil [165 181])
            ("m2sa_fpga.h" include nil nil [182 204])
            ("sysstm32" variable (:type ("sysstm32_s" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [206 233])
            ("spi_sys_init" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [253 258]))                  
                :type "void")
                nil [235 2010])
            ("data" variable (:type ("uint16_t" type (:type "class") nil nil)) nil [2012 2026])
            ("led" variable
               (:default-value "0"
                :type ("uint8_t" type (:type "class") nil nil))
                nil [2028 2044])
            ("spi_sys_isr" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2063 2068]))                  
                :type "void")
                nil [2046 2949]))          
      :file "spi_sys.c"
      :pointmax 2951
      :fsize 2950
      :lastmodtime '(22570 51385 902815 14000)
      :unmatched-syntax nil))
  :file "!home!gaobo!algorithm.fonrich.com!mcu!Ai!Ai_VRF_m2sa_apf3p!Ai_VRF_m2sa_apf3p_0.x!app!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
